# Content update instructions

**Change Summary:**  
Generate OpenAPI Specification for the Content Management API. Externalize schemas, paths, parameters, and enums according to project instructions.  

**Project:** Content Management API  
**Component:** Backend  

---
Operation: `Create`  
Resource: `src/main/resources/api-ai/open_api_spec.yaml`  
Content:

```yaml
openapi: 3.0.3
info:
  title: Content Management API
  version: \"1.0.0\"
  description: API for LLM-based content management, including discovery, instruction processing, and text handling.
servers:
  - url: https://api.example.com
paths:
  /instructions:
    $ref: './paths/instructions.yaml'
  /instructions/{type}/process:
    $ref: './paths/instructions_{type}_process.yaml'
  /text/process:
    $ref: './paths/text_process.yaml'
components:
  responses:
    ErrorResponse:
      $ref: './schemas/ErrorResponse.yaml'
```

---
Operation: `Create`  
Resource: `src/main/resources/api-ai/paths/instructions.yaml`  
Content:

```yaml
get:
  operationId: listInstructions
  summary: List available instructions
  tags:
    - instructions
  responses:
    200:
      description: A list of available instructions
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: \"../schemas/Instruction.yaml\"
```

---
Operation: `Create`  
Resource: `src/main/resources/api-ai/paths/instructions_{type}_process.yaml`  
Content:

```yaml
post:
  operationId: processInstruction
  summary: Process a specific instruction type
  tags:
    - instructions
  parameters:
    - $ref: '../parameters/path/type.yaml'
  requestBody:
    description: Instruction processing input
    required: true
    content:
      application/json:
        schema:
          $ref: \"../schemas/InstructionProcessRequest.yaml\"
  responses:
    200:
      description: Instruction processed successfully
      content:
        application/json:
          schema:
            $ref: \"../schemas/InstructionProcessResponse.yaml\"
    400:
      $ref: '../responses/ErrorResponse.yaml'
    500:
      $ref: '../responses/ErrorResponse.yaml'
```

---
Operation: `Create`  
Resource: `src/main/resources/api-ai/paths/text_process.yaml`  
Content:

```yaml
post:
  operationId: processText
  summary: Process raw text generated by LLM
  tags:
    - text
  requestBody:
    description: Text processing input
    required: true
    content:
      application/json:
        schema:
          $ref: \"../schemas/TextProcessRequest.yaml\"
  responses:
    200:
      description: Text processed successfully
      content:
        application/json:
          schema:
            $ref: \"../schemas/TextProcessResponse.yaml\"
    400:
      $ref: '../responses/ErrorResponse.yaml'
    500:
      $ref: '../responses/ErrorResponse.yaml'
```

---
Operation: `Create`  
Resource: `src/main/resources/api-ai/schemas/Instruction.yaml`  
Content:

```yaml
type: object
properties:
  type:
    type: string
    example: \"CONTENT_UPDATE\"
  description:
    type: string
    example: \"Specifies the format of LLM output to update files (resources).\"
  formatRequirements:
    type: string
    example: \"\"
  examples:
    type: array
    items:
      type: string
      example: \"# Content update instructions\
\
**Change Summary:**\
Add user model into domain. Removing deprecated account functionality\
**Project:** DataHub\
**Component:** Backend\"
```

---
Operation: `Create`  
Resource: `src/main/resources/api-ai/schemas/InstructionProcessRequest.yaml`  
Content:

```yaml
type: object
required:
  - instructions
properties:
  instructions:
    type: string
    example: \"# Content update instructions\
\
**Change Summary:**\
Add user model into domain. Removing deprecated account functionality\
**Project:** DataHub\
**Component:** Backend\
\
---\
Operation: `Create`\
Resource: `src/main/java/api/model/User.java`\
Content:\
\
```java\
public class User {\
    private UUID id;\
    private String name;\
    private String email;\
}\
```\"
```

---
Operation: `Create`  
Resource: `src/main/resources/api-ai/schemas/InstructionProcessResponse.yaml`  
Content:

```yaml
type: object
properties:
  status:
    type: string
    enum: [\"PROCESSED\"]
    example: \"PROCESSED\"
  message:
    type: string
    example: \"User.java created\"
```

---
Operation: `Create`  
Resource: `src/main/resources/api-ai/schemas/TextProcessRequest.yaml`  
Content:

```yaml
type: object
required:
  - text
properties:
  text:
    type: string
    example: \"Any response from LLM\"
```

---
Operation: `Create`  
Resource: `src/main/resources/api-ai/schemas/TextProcessResponse.yaml`  
Content:

```yaml
type: object
properties:
  status:
    type: string
    enum: [\"PROCESSED\"]
    example: \"PROCESSED\"
  message:
    type: string
    example: \"2 files were created as based on LLM response\"
```

---
Operation: `Create`  
Resource: `src/main/resources/api-ai/schemas/ErrorResponse.yaml`  
Content:

```yaml
type: object
properties:
  code:
    type: string
    example: \"24.USR\"
  message:
    type: string
    example: \"Unable to process text\"
```

---
Operation: `Create`  
Resource: `src/main/resources/api-ai/parameters/path/type.yaml`  
Content:

```yaml
name: type
in: path
required: true
description: The type of instruction to process (e.g., CONTENT_UPDATE, SCRIPT_EXECUTION)
schema:
  type: string
  example: \"CONTENT_UPDATE\"
```